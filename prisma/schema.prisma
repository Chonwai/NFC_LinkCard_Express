// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  engineType      = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id                   String      @id @default(uuid())
  username             String      @unique
  email                String      @unique
  password             String
  display_name         String?     @map("display_name")
  avatar               String?
  bio                  String?
  is_verified          Boolean     @default(false) @map("is_verified")
  verification_token   String?     @map("verification_token")
  reset_password_token String?     @map("reset_password_token")
  created_at           DateTime    @default(now()) @map("created_at")
  updated_at           DateTime    @updatedAt @map("updated_at")
  links                Link[]
  profiles             Profile[]
  analytics            Analytics[]

  @@map("users")
}

model Profile {
  id            String   @id @default(uuid())
  name          String
  slug          String   @unique
  user_id       String   @map("user_id")
  user          User     @relation(fields: [user_id], references: [id])
  links         Link[]
  custom_domain String?  @map("custom_domain")
  is_public     Boolean  @default(true) @map("is_public")
  is_default    Boolean  @default(false) @map("is_default")
  description   String?
  profile_image String?  @map("profile_image")
  created_at    DateTime @default(now()) @map("created_at")
  updated_at    DateTime @updatedAt @map("updated_at")
  meta          Json?    @default("{}")
  appearance    Json?    @default("{}")

  @@index([user_id])
  @@map("profiles")
}

model Link {
  id            String      @id @default(uuid())
  title         String
  url           String
  description   String?
  is_active     Boolean     @default(true) @map("is_active")
  click_count   Int         @default(0) @map("click_count")
  icon          String?
  user_id       String      @map("user_id")
  user          User        @relation(fields: [user_id], references: [id])
  display_order Int         @default(0) @map("display_order")
  created_at    DateTime    @default(now()) @map("created_at")
  updated_at    DateTime    @updatedAt @map("updated_at")
  profile_id    String      @map("profile_id")
  profile       Profile     @relation(fields: [profile_id], references: [id])
  meta          Json?       @default("{}")
  type          LinkType    @default(CUSTOM)
  platform      LinkPlatform?
  analytics     Analytics[]

  @@index([user_id])
  @@index([profile_id])
  @@map("links")
}

model Analytics {
  id          String   @id @default(uuid())
  user_id     String   @map("user_id")
  user        User     @relation(fields: [user_id], references: [id])
  link_id     String?  @map("link_id")
  link        Link?    @relation(fields: [link_id], references: [id])
  visitor_ip  String   @map("visitor_ip")
  user_agent  String?  @map("user_agent")
  referer     String?
  country     String?
  city        String?
  timestamp   DateTime @default(now())
  meta        Json?    @default("{}")

  @@index([user_id])
  @@index([link_id])
  @@map("analytics")
}

enum LinkType {
  CUSTOM
  SOCIAL
}

enum LinkPlatform {
  // Social Platforms
  GITHUB
  FACEBOOK
  INSTAGRAM
  LINKEDIN
  TELEGRAM
  WECHAT
  X
  YOUTUBE
  // Custom Platforms
  WEBSITE
  PHONE
  EMAIL
  LOCATION
}
