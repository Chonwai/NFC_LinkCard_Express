---
description: 
globs: 
alwaysApply: true
---
# NFC LinkCard Express

NFC LinkCard Express 是一個基於 Express.js 和 TypeScript 的 RESTful API 服務，提供 NFC 數字名片管理和分享功能。本專案使用現代化的技術堆疊和設計模式，為數字名片提供可靠、安全且可擴展的後端服務。

## 📝 目錄

- [專案概述](mdc:#專案概述)
- [功能特點](mdc:#功能特點)
- [技術堆疊](mdc:#技術堆疊)
- [核心模塊](mdc:#核心模塊)
- [數據模型](mdc:#數據模型)
- [API 端點](mdc:#api-端點)
- [架構設計](mdc:#架構設計)
- [安全性考慮](mdc:#安全性考慮)
- [部署說明](mdc:#部署說明)
- [開發指南](mdc:#開發指南)

## 📋 專案概述

NFC LinkCard Express 是一個數字名片管理系統，讓用戶能夠創建多個數字名片檔案，添加各種社交媒體和自定義連結，並通過 NFC 技術或網頁連結輕鬆分享。這個系統適合專業人士、創意工作者、企業及任何希望以現代方式分享聯繫資訊的人士使用。

### 使用案例

- 專業人士可以在商務會議上使用 NFC 名片分享聯繫方式
- 創意人士可以創建包含所有作品集和社交媒體的個人檔案
- 企業可以為員工創建統一的數字名片，提供一致的品牌形象
- 活動組織者可以創建活動專屬檔案，分享相關連結和資訊

## ✨ 功能特點

### 用戶管理
- ✅ 用戶註冊與登入系統
- ✅ 電子郵件驗證機制
- ✅ JWT 身份認證
- ✅ 密碼重設功能
- ✅ 用戶檔案管理（頭像、個人資料等）

### 檔案管理 (Profile)
- ✅ 創建多個個人檔案
- ✅ 自定義檔案 URL（slug）
- ✅ 設置檔案公開或私密
- ✅ 上傳檔案封面圖片
- ✅ 設置默認檔案
- ✅ 自定義域名配置
- ✅ 檔案外觀設置（主題、顏色等）

### 連結管理
- ✅ 添加社交媒體連結（支援多種平台）
- ✅ 創建自定義連結
- ✅ 連結排序與組織
- ✅ 連結啟用/停用控制
- ✅ 連結圖標與描述
- ✅ 連結類型分類（社交、自定義等）

### 潛在客戶獲取
- ✅ 啟用潛在客戶獲取表單
- ✅ 自定義欄位設置
- ✅ 潛在客戶數據管理

### 分析功能
- ✅ 連結點擊次數統計
- ✅ 訪客來源分析
- ✅ 地理位置數據
- ✅ 用戶代理資訊（設備、瀏覽器等）
- ✅ 自定義分析元數據

## 🛠️ 技術堆疊

### 核心技術
- **運行環境**: Node.js 18.x LTS
- **框架**: Express.js 4.18.x
- **語言**: TypeScript 5.0.x
- **數據庫**: PostgreSQL 15.x

### ORM 和數據訪問
- **Prisma**: 數據庫 ORM，提供類型安全的數據庫訪問
- **TypeDI**: 依賴注入框架，減少模組間耦合度

### 認證和安全
- **jsonwebtoken**: JWT 令牌實現
- **bcrypt**: 密碼加密
- **cors**: 跨域資源共享
- **class-validator**: 數據驗證

### 文件存儲和處理
- **Vercel Blob**: 雲端文件存儲
- **multer**: 文件上傳處理
- **sharp**: 圖片處理與優化

### 郵件服務
- **Nodemailer**: 郵件發送
- **EJS**: 郵件模板渲染

## 📦 核心模塊

### 1. 認證模塊 (Auth)
認證模塊處理用戶的註冊、登入和身份驗證，確保系統安全。

**主要功能**:
- 用戶註冊與帳戶創建
- 電子郵件驗證流程
- 用戶登入與 JWT 令牌生成
- 密碼重設流程
- 身份驗證中間件

### 2. 用戶模塊 (User)
用戶模塊管理用戶個人資訊和設置。

**主要功能**:
- 用戶個人資料管理
- 頭像上傳與處理
- 密碼修改
- 用戶設置管理

### 3. 檔案模塊 (Profile)
檔案模塊處理用戶的數字名片檔案管理。

**主要功能**:
- 個人檔案創建與編輯
- 檔案封面圖片管理
- 檔案公開性控制
- 檔案 URL (slug) 生成與管理
- 默認檔案設置
- 檔案主題與外觀設置

### 4. 連結模塊 (Link)
連結模塊管理用戶添加到檔案中的各種連結。

**主要功能**:
- 連結添加與編輯
- 連結分類管理
- 連結排序控制
- 連結啟用/禁用
- 連結點擊統計
- 平台特定連結驗證

### 5. 分析模塊 (Analytics)
分析模塊收集和處理用戶檔案和連結的訪問數據。

**主要功能**:
- 連結點擊追蹤
- 訪客數據收集
- 地理位置分析
- 訪問統計報告
- 用戶行為分析

### 6. 潛在客戶模塊 (Lead)
潛在客戶模塊管理通過用戶檔案收集的潛在客戶資訊。

**主要功能**:
- 潛在客戶表單配置
- 潛在客戶數據收集
- 潛在客戶數據管理
- 潛在客戶導出功能

## 📊 數據模型

系統包含以下主要數據模型：

### User (用戶)
```
- id: 唯一識別碼
- username: 用戶名
- email: 電子郵件
- password: 加密密碼
- display_name: 顯示名稱
- avatar: 頭像 URL
- bio: 個人簡介
- is_verified: 電子郵件驗證狀態
- verification_token: 驗證令牌
- reset_password_token: 密碼重設令牌
- reset_password_expires: 密碼重設令牌過期時間
- created_at: 創建時間
- updated_at: 更新時間
```

### Profile (檔案)
```
- id: 唯一識別碼
- name: 檔案名稱
- slug: 自定義 URL 片段
- user_id: 所屬用戶 ID
- custom_domain: 自定義域名
- is_public: 公開狀態
- is_default: 默認檔案標記
- description: 檔案描述
- profile_image: 檔案封面圖片 URL
- meta: 元數據（JSON）
- appearance: 外觀設置（JSON）
- enable_lead_capture: 啟用潛在客戶獲取
- lead_capture_fields: 潛在客戶欄位設置（JSON）
- created_at: 創建時間
- updated_at: 更新時間
```

### Link (連結)
```
- id: 唯一識別碼
- title: 連結標題
- url: 連結 URL
- description: 連結描述
- is_active: 啟用狀態
- click_count: 點擊次數
- icon: 圖標
- user_id: 所屬用戶 ID
- profile_id: 所屬檔案 ID
- display_order: 顯示順序
- type: 連結類型（CUSTOM/SOCIAL）
- platform: 連結平台
- meta: 元數據（JSON）
- created_at: 創建時間
- updated_at: 更新時間
```

### Analytics (分析)
```
- id: 唯一識別碼
- user_id: 用戶 ID
- link_id: 連結 ID（可選）
- visitor_ip: 訪客 IP
- user_agent: 用戶代理
- referer: 來源網址
- country: 國家
- city: 城市
- timestamp: 訪問時間
- meta: 元數據（JSON）
```

### Lead (潛在客戶)
```
- id: 唯一識別碼
- profile_id: 所屬檔案 ID
- first_name: 名字
- last_name: 姓氏
- email: 電子郵件
- phone_number: 電話號碼（可選）
- company: 公司（可選）
- job_title: 職稱（可選）
- remark: 備註（可選）
- created_at: 創建時間
- updated_at: 更新時間
```

## 🔄 架構設計

NFC LinkCard Express 採用分層架構設計，確保關注點分離和代碼模組化：

### 分層架構
```
HTTP 請求 → 中間件 → 路由 → 控制器 → 服務 → 數據訪問 → 數據庫
```
- **路由層**: 定義 API 端點和 HTTP 方法
- **控制器層**: 處理請求驗證、響應格式化和錯誤處理
- **服務層**: 實現業務邏輯和規則
- **數據訪問層**: 通過 Prisma ORM 管理數據庫操作

### 設計模式
- **依賴注入**: 使用 TypeDI 實現控制反轉，降低模組耦合度
- **DTO 模式**: 使用數據傳輸對象處理請求和響應數據
- **倉儲模式**: 通過 Prisma ORM 實現數據庫訪問抽象
- **中間件模式**: 處理橫切關注點如認證、日誌和錯誤處理

## 🔒 安全性考慮

NFC LinkCard Express 實施了多層安全措施：

- **密碼安全**: 所有密碼使用 bcrypt 加密存儲
- **JWT 認證**: 使用 JWT 令牌進行身份驗證
- **輸入驗證**: 使用 class-validator 驗證所有輸入數據
- **CORS 保護**: 實施跨域資源共享策略
- **HTTP 頭安全**: 通過適當的 HTTP 頭設置防止常見攻擊
- **限流保護**: 防止暴力破解和拒絕服務攻擊
- **數據驗證**: 嚴格驗證所有用戶輸入
- **安全通信**: 支援 HTTPS 加密通信

## 🚀 部署說明

NFC LinkCard Express 可以通過多種方式部署：

### 環境需求
- Node.js 18.x 或更高版本
- PostgreSQL 數據庫
- SMTP 郵件服務
- Vercel Blob 存儲（或兼容替代品）

### 部署步驟
1. 克隆代碼存儲庫
2. 安裝依賴: `npm install` 或 `yarn install`
3. 設置環境變量（參見 `.env.example`）
4. 運行數據庫遷移: `npx prisma migrate deploy`
5. 構建生產代碼: `npm run build`
6. 啟動服務: `npm start`

### Docker 部署
提供了 Docker 和 Docker Compose 配置，方便容器化部署。

## 👨‍💻 開發指南

### 本地開發設置
1. 克隆代碼存儲庫
2. 安裝依賴: `npm install` 或 `yarn install`
3. 複製 `.env.example` 為 `.env` 並配置環境變量
4. 運行開發服務器: `npm run dev`

### 代碼風格與規範
- 使用 ESLint 和 Prettier 確保代碼質量和一致性
- 遵循 TypeScript 最佳實踐
- 使用依賴注入和控制反轉原則
- 編寫單元測試和集成測試

### 貢獻指南
- Fork 代碼庫並創建新分支
- 遵循現有的代碼風格和架構
- 添加適當的測試覆蓋
- 提交拉取請求並詳細描述更改

---

## 📜 許可證

MIT License

---

## 🙏 致謝

感謝所有為這個專案做出貢獻的開發者和使用者。

---

*NFC LinkCard Express - 讓數字名片分享變得簡單而現代化* 